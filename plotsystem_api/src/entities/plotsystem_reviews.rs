//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "plotsystem_reviews")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub reviewer_uuid: String,
    pub rating: String,
    pub feedback: String,
    pub review_date: DateTime,
    pub sent: i8,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::plotsystem_builders::Entity",
        from = "Column::ReviewerUuid",
        to = "super::plotsystem_builders::Column::Uuid",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PlotsystemBuilders,
    #[sea_orm(has_many = "super::plotsystem_plots::Entity")]
    PlotsystemPlots,
}

impl Related<super::plotsystem_builders::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemBuilders.def()
    }
}

impl Related<super::plotsystem_plots::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemPlots.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
