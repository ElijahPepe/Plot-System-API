//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use super::sea_orm_active_enums::Continent;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "plotsystem_countries")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub server_id: i32,
    pub name: String,
    pub head_id: Option<String>,
    pub continent: Continent,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::plotsystem_servers::Entity",
        from = "Column::ServerId",
        to = "super::plotsystem_servers::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PlotsystemServers,
    #[sea_orm(has_many = "super::plotsystem_buildteam_has_countries::Entity")]
    PlotsystemBuildteamHasCountries,
    #[sea_orm(has_many = "super::plotsystem_city_projects::Entity")]
    PlotsystemCityProjects,
}

impl Related<super::plotsystem_servers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemServers.def()
    }
}

impl Related<super::plotsystem_buildteam_has_countries::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemBuildteamHasCountries.def()
    }
}

impl Related<super::plotsystem_city_projects::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemCityProjects.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
