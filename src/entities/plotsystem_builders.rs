//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "plotsystem_builders")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: String,
    pub name: String,
    pub score: i32,
    pub completed_plots: i32,
    pub first_slot_id: Option<i32>,
    pub second_slot_id: Option<i32>,
    pub third_slot_id: Option<i32>,
    pub lang: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::plotsystem_plots::Entity",
        from = "Column::FirstSlotId",
        to = "super::plotsystem_plots::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PlotsystemPlots3,
    #[sea_orm(
        belongs_to = "super::plotsystem_plots::Entity",
        from = "Column::SecondSlotId",
        to = "super::plotsystem_plots::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PlotsystemPlots2,
    #[sea_orm(
        belongs_to = "super::plotsystem_plots::Entity",
        from = "Column::ThirdSlotId",
        to = "super::plotsystem_plots::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    PlotsystemPlots1,
    #[sea_orm(has_many = "super::plotsystem_builder_is_reviewer::Entity")]
    PlotsystemBuilderIsReviewer,
    #[sea_orm(has_many = "super::plotsystem_reviews::Entity")]
    PlotsystemReviews,
}

impl Related<super::plotsystem_builder_is_reviewer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemBuilderIsReviewer.def()
    }
}

impl Related<super::plotsystem_reviews::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlotsystemReviews.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
